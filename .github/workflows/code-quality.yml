name: Code Quality

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy bandit

    - name: Run black formatting check
      run: |
        cd backend
        black --check --diff app/

    - name: Run isort import sorting check
      run: |
        cd backend
        isort --check-only --diff app/

    - name: Run flake8 linting
      run: |
        cd backend
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run mypy type checking
      run: |
        cd backend
        mypy app/ --ignore-missing-imports

    - name: Run bandit security linting
      run: |
        cd backend
        bandit -r app/ -f json -o bandit-report.json || true

    - name: Upload bandit results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-results
        path: backend/bandit-report.json

  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run ESLint
      run: |
        cd frontend
        npm run lint

    - name: Run Prettier check
      run: |
        cd frontend
        npx prettier --check src/

    - name: Run security audit
      run: |
        cd frontend
        npm audit --audit-level=moderate

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@v1
      with:
        project: 'job-agent-system'
        path: '.'
        format: 'SARIF'
        out: 'reports'

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'reports/dependency-check.sarif'